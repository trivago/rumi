#!/bin/sh

#
# rumi executor for POSIX and compliant systems.
#
# NOTE: The additional forward slashes in front of each path are required
# for cygwin based shell emulators on Windows, because they otherwise
# simply transform the paths to Windows paths. This behavior is usually
# exactly what is desired but not in this case since docker is Linux
# based and cannot handle Windows paths. Note further that POSIX compliant
# systems have to replace three or more leading slashes with a single
# slash (see POSIX 1003.1).
#

readonly CWD="//${PWD}"
readonly SOCK=///var/run/docker.sock

# Start Docker with rumi.
#
# GLOBALS:
#  $CWD - Current working directory.
#  $SOCK - Socket path for Docker socket.
# RETURNS:
#  0 - On success.
#  ? - Check the `docker run` exit code documentation.
start_docker()
{
    docker run                              \
        --interactive                       \
        --rm                                \
        --tty                               \
        --volume="${CWD}":///workdir        \
        --volume="${SOCK}:${SOCK}"          \
        --entrypoint ///rumi/bin/entrypoint \
        trivago/rumi:stable "${CWD}" $*
}

start_docker

if [ $? = 125 ]
then
    printf 'Trying to start default machine...\n'
    docker-machine start

    # 125 is returned if the notice about new IP addresses is printed.
    if [ $? = 0 ] || [ $? = 125 ]
    then
        printf 'Exporting Docker machine environment...\n'
        eval $(docker-machine env)
        start_docker
    fi
fi
